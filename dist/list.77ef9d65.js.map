{"version":3,"sources":["list.js"],"names":["createList","value","createNode","appendList","list","node","x","next","removeFromList","p","data","travelList","fn","node2","node3","node4","console","log"],"mappings":"AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1B,SAAOC,UAAU,CAACD,KAAD,CAAjB;AACD,CAFD;;AAGA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOH,KAAP,EAAiB;AAClC,MAAMI,IAAI,GAAGH,UAAU,CAACD,KAAD,CAAvB;AACA,MAAIK,CAAC,GAAGF,IAAR;;AACA,SAAOE,CAAC,CAACC,IAAT,EAAe;AACbD,IAAAA,CAAC,GAAGA,CAAC,CAACC,IAAN;AACD,GALiC,CAMlC;;;AACAD,EAAAA,CAAC,CAACC,IAAF,GAASF,IAAT;AACA,SAAOA,IAAP;AACD,CATD;;AAUA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,IAAD,EAAOC,IAAP,EAAgB;AACrC,MAAIC,CAAC,GAAGF,IAAR;AACA,MAAIK,CAAC,GAAG,IAAR;;AACA,SAAOH,CAAC,KAAKD,IAAb,EAAmB;AACjBI,IAAAA,CAAC,GAAGH,CAAJ;AACAA,IAAAA,CAAC,GAAGA,CAAC,CAACC,IAAN;AACD;;AACDE,EAAAA,CAAC,CAACF,IAAF,GAASD,CAAC,CAACC,IAAX;AACD,CARD;;AAUA,IAAML,UAAU,GAAG,SAAbA,UAAa,CAAAD,KAAK,EAAI;AAC1B,SAAO;AACLS,IAAAA,IAAI,EAAET,KADD;AAELM,IAAAA,IAAI,EAAE;AAFD,GAAP;AAID,CALD;;AAOA,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACP,IAAD,EAAOQ,EAAP,EAAc;AAC/B,MAAIN,CAAC,GAAGF,IAAR;;AACA,SAAOE,CAAC,KAAK,IAAb,EAAmB;AACjBM,IAAAA,EAAE,CAACN,CAAD,CAAF;AACAA,IAAAA,CAAC,GAAGA,CAAC,CAACC,IAAN;AACD;AACF,CAND;;AAQA,IAAMH,IAAI,GAAGJ,UAAU,CAAC,EAAD,CAAvB;AACA,IAAMa,KAAK,GAAGV,UAAU,CAACC,IAAD,EAAO,EAAP,CAAxB;AACA,IAAMU,KAAK,GAAGX,UAAU,CAACC,IAAD,EAAO,EAAP,CAAxB;AACA,IAAMW,KAAK,GAAGZ,UAAU,CAACC,IAAD,EAAO,EAAP,CAAxB;AACAO,UAAU,CAACP,IAAD,EAAO,UAAAC,IAAI,EAAI;AACvBW,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACK,IAAjB;AACD,CAFS,CAAV","file":"list.77ef9d65.js","sourceRoot":"..\\src","sourcesContent":["const createList = value => {\r\n  return createNode(value);\r\n};\r\nconst appendList = (list, value) => {\r\n  const node = createNode(value);\r\n  let x = list;\r\n  while (x.next) {\r\n    x = x.next;\r\n  }\r\n  // x.next === null //x 是最后一个节点\r\n  x.next = node;\r\n  return node;\r\n};\r\nconst removeFromList = (list, node) => {\r\n  let x = list;\r\n  let p = null;\r\n  while (x !== node) {\r\n    p = x;\r\n    x = x.next;\r\n  }\r\n  p.next = x.next;\r\n};\r\n\r\nconst createNode = value => {\r\n  return {\r\n    data: value,\r\n    next: null\r\n  };\r\n};\r\n\r\nconst travelList = (list, fn) => {\r\n  let x = list;\r\n  while (x !== null) {\r\n    fn(x);\r\n    x = x.next;\r\n  }\r\n};\r\n\r\nconst list = createList(10);\r\nconst node2 = appendList(list, 20);\r\nconst node3 = appendList(list, 30);\r\nconst node4 = appendList(list, 40);\r\ntravelList(list, node => {\r\n  console.log(node.data);\r\n});\r\n"]}